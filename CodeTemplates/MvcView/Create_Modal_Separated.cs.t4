<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
<#@ include file="Manager.ttinclude" #>
<#@ assembly name="C:\Program Files (x86)\Microsoft Visual Studio 14.0\Common7\IDE\Microsoft.VisualStudio.Web.Mvc.5.0.dll"
#>
<# var manager = Manager.Create(Host, GenerationEnvironment); #>
@model <#= ViewDataTypeName #>
<#
    var controllerstring = ViewDataTypeName.Split('.');
    
            
// "form-control" attribute is only supported for all EditorFor() in System.Web.Mvc 5.1.0.0 or later versions, except for checkbox, which uses a div in Bootstrap
string boolType = "System.Boolean";
Version requiredMvcVersion = new Version("5.1.0.0");
bool isControlHtmlAttributesSupported = MvcVersion >= requiredMvcVersion;
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<h2><#= ViewName#></h2>

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<#
if (ReferenceScriptLibraries) {
#>
<#
    if (!IsLayoutPageSelected && IsBundleConfigPresent) {
#>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<#
    }
#>
<#
    else if (!IsLayoutPageSelected) {
#>

<#
    }
#>

<#
}

#>

<div class="modal fade" id="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        @using (Ajax.BeginForm("Create", AjaxOptionsInstance))
        {
			@Html.AntiForgeryToken()
            <div class="modal-content panel panel-primary">
                <div class="modal-header panel-heading">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h3 class="modal-title">Add New <#= ViewDataTypeShortName #></h3>
                </div>
                <div class="modal-body panel-body" id="ajax-update-panel">
                    @Html.Partial("_<#= ViewDataTypeShortName #>InfoPartial", Model)
                    <# 
                        manager.StartNewFile("_" + ViewDataTypeShortName + "InfoPartial.cshtml"); 
                    #>
<#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// #>
@model <#= ViewDataTypeName #>
<#
if (isControlHtmlAttributesSupported) {
#>
@if (!Html.ViewData.ModelState.IsValid)
{
	<div class = "alert alert-danger alert-dismissible">
		<button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	</div>
}
else if(ViewBag.Success != null){
    bool success = (bool)ViewBag.Success;
    if(success){
        <div class = "alert alert-danger">
		    <h4>Operation Succeeded</h4>
	    </div>
        <script>
            try{
                setTimeout(function(){
                                $("#modal").modal('hide');
                            }
                        ,3000);
            }catch(e){
                console.log(e);
            }

            try{
                <#= ViewDataTypeShortName #>List.ajax.reload();
            }
            catch(e){
                console.log(e);
            }
        </script>
    }
}
<#        
} else {
#>
@if (!Html.ViewData.ModelState.IsValid)
{
	<div class = "alert alert-danger alert-dismissible">
		<button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
		@Html.ValidationSummary(true)
	</div>
}
else if(ViewBag.Success != null){
    bool success = (bool)ViewBag.Success;
    if(success){
        <div class = "alert alert-danger">
		    <h4>Operation Succeeded</h4>
	    </div>
        <script>
            try{
                setTimeout(function(){
                                $("#modal").modal('hide');
                            }
                        ,3000);
            }catch(e){
                console.log(e);
            }

            try{
                <#= ViewDataTypeShortName #>List.ajax.reload();
            }
            catch(e){
                console.log(e);
            }
        </script>
    }
}
<#      
}
#>

<div class="form-horizontal">
<#
foreach (PropertyMetadata property in ModelMetadata.Properties) {
    if (property.Scaffold && !property.IsAutoGenerated && !property.IsReadOnly && !property.IsAssociation) {
        // If the property is a primary key and Guid, then the Guid is generated in the controller. Hence, this propery is not displayed on the view.
        if (property.IsPrimaryKey && IsPropertyGuid(property)) {
            continue;
        }

#>
    <div class="form-group">
        <# if (property.IsForeignKey) { #>
        @Html.LabelFor(model => model.<#= property.PropertyName #>, "<#= GetAssociationName(property) #>", htmlAttributes: new { @class = "control-label col-md-4" })
        <# } else { #>
        @Html.LabelFor(model => model.<#= property.PropertyName #>, htmlAttributes: new { @class = "control-label col-md-4" })
        <# } #>
        <div class="col-md-8">
        <#
        bool isCheckbox = property.TypeName.Equals(boolType);
        if (property.IsForeignKey) {
        #>
            <# 
            if (isControlHtmlAttributesSupported) {
            #>
            @Html.DropDownList("<#= property.PropertyName #>", null, htmlAttributes: new { @class = "form-control" })
            <#
            } else {
            #>
            @Html.DropDownList("<#= property.PropertyName #>", String.Empty)
            <#
            }
            #>
    
            <#
            } else  if (isControlHtmlAttributesSupported) {
                if (isCheckbox) {
            #>
                <div class="checkbox">
                <# PushIndent("    "); #>
                    @Html.EditorFor(model => model.<#= property.PropertyName #>)
                <#
                } else if (property.IsEnum && !property.IsEnumFlags) {
                #>
                    @Html.EnumDropDownListFor(model => model.<#= property.PropertyName #>, htmlAttributes: new { @class = "form-control" })
                    <#
                        } else {
                    #>
                    @Html.EditorFor(model => model.<#= property.PropertyName #>, new { htmlAttributes = new { @class = "form-control" } })
                    <#
                    }
                    } else {
                    #>
                    @Html.EditorFor(model => model.<#= property.PropertyName #>)
                    <#
                    }
                    #>

                    <# 
                    if (isControlHtmlAttributesSupported) {
                    #>
                        @Html.ValidationMessageFor(model => model.<#= property.PropertyName #>, "", new { @class = "text-danger" })
                    <#
                        } else {
                    #>
                        @Html.ValidationMessageFor(model => model.<#= property.PropertyName #>)
                    <#
                        }
                    #>
                    <#
                        if (isCheckbox && isControlHtmlAttributesSupported) {
                            PopIndent();
                    #>
                </div>
                    <#
                        }   
                    #>
        </div>
    </div>

        <#
            }
        }
        #>
</div>
<#/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// #>
                    <# 
                        manager.EndBlock(); 
                    #>
</div>
                <div class="modal-footer panel-footer">
                    <button type="submit" class="btn btn-success">Save changes</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div>
        }
    </div>
</div>


<#
if(IsLayoutPageSelected && ReferenceScriptLibraries && IsBundleConfigPresent) {
#>


@Scripts.Render("~/bundles/jqueryval")

<#
}
#>
<#
else if(IsLayoutPageSelected && ReferenceScriptLibraries) {
#>


<#
}
#>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>
<# manager.Process(true); #>